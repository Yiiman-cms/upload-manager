<?php
	/**
	 * Created by YiiMan.
	 * Programmer: gholamreza beheshtian
	 * Mobile:09353466620
	 * 
	 * Site:http://yiiman.ir
	 * Date: 8/24/2018
	 * Time: 9:25 PM
	 */
	
	namespace YiiMan\LibUploadManager\lib;

    use yii\base\Component;
    use YiiMan\Setting\module\components\Options;

    /**
	 * این کلاس فایل های پوشه های آپلود را به شکلی ساده و بازگردانی می کند
	 *
	 *
	 * sample use syntax : Yii::$app->File->{folder name}->{file name}
	 *
	 *
	 * or
	 *
	 *
	 * Yii::$app->File->{folder name}->{folder name}->{file Name}
	 *
	 *
	 * this is very easy is'nt it?
	 * Class File
	 * @package YiiMan\LibUploadManager
	 */
	class File extends Component {
		public $address;
		public $options;
        public $uploadDir;
		public function init() {
			
			$this->options = new Options();
			
			$this->uploadDir=realpath( $this->options->UploadDir);
			if (empty($this->uploadDir)){
				mkdir(  $this->uploadDir.'/upload');
			}
		}
		public function __get( $name ) {
		
//			$out= parent::__get( $name ); // TODO: Change the autogenerated stub
		
			if (empty( $out)){
				
				return $this->get( $name);
			}
		}
		
		/**
		 * will return all files name list as array in this folder
		 */
		public function AllFilesName(){
			return $this->getFileList();
		}
		
		/**
		 * @param string $name
		 * این تابع محتوای یک فایل را بازگردانی می کند
		 *
		 * @return bool|Object1|string
		 */
		public function oneFile($name){
			$path=$this->address.'/'. $name;
			
			if (file_exists( $path)){
				if (is_file( $path)){
					return file_get_contents( $path);
				}else{
					return $this->get($path);
				}
			}else{
				return '';
			}
		}
		
		/**
		 * @param $name
		 *
		 * @return $this|string
		 */
		private function get($name) {
			/* < محاسبه ی مسیر های فایل > */
			{
					if (empty( $this->address)){
						$path=$this->uploadDir.'/'.$name;
						$this->address=$path;
					}else{
						$path=$this->address.'/'.$name;
						$this->address=$path;
					}
			}
			/* < ایجاد کردن پوشه در صورت وجود نداشتن > */
			{
				if (!file_exists($this->address)){
					mkdir( $this->address);
				}
			}
			/* </ ایجاد کردن پوشه در صورت وجود نداشتن > */
			
			/* </ محاسبه ی مسیر های فایل > */
			return $this;
		}
		
		protected function getFileList() {
			$dir=$this->address;
			// array to hold return value
			$retval = [];
			
			// add trailing slash if missing
			if ( substr( $dir, - 1 ) != "/" ) {
				$dir .= "/";
			}
			
			// open pointer to directory and read list of files
			try{
				
				$d = @dir( $dir );
				if (empty($d))return null;
			}catch (\Exception $e){
				return null;
			}
			while ( false !== ( $entry = $d->read() ) ) {
				// skip hidden files
				if ( $entry{0} == "." ) {
					continue;
				}
				if ( is_dir( "{$dir}{$entry}" ) ) {
					$retval[$entry] = [
						'name'    => "{$entry}",
						'type'    => filetype( "{$dir}{$entry}" ),
						'size'    => 0,
						'lastmod' => filemtime( "{$dir}{$entry}" )
					];
				} elseif ( is_readable( "{$dir}{$entry}" ) ) {
					$retval[$entry] = [
						'name'    => "{$entry}",
						'type'    => mime_content_type( "{$dir}{$entry}" ),
						'size'    => filesize( "{$dir}{$entry}" ),
						'lastmod' => filemtime( "{$dir}{$entry}" )
					];
				}
			}
			$d->close();
			
			return $retval;
		}
		
		/**
		 * با اعلام نام آیتم موجود در فرم، فایل را گرفته و به صورت بیس 64 ذخیره می کند
		 */
		public function saveFile( $attribute ) {
			
			/* < Get File From Post And Save In server > */
			{
				$file = UploadedFile::getInstanceByName( $attribute );
				$path = $this->address . "/" . $attribute . '.base64';
				$file->saveAs( $path );
				$extention = $file->extension;
			}
			/* </ Get File From Post And Save In server > */
			
			
			/* < Convert To base64 > */
			{
				
				$file = file_get_contents( $path );
				$file=base64_encode( $file);
				$file = 'data:image/' . $extention . ';base64,' . $file;
			}
			/* </ Convert To base64 > */
			
			
			/* < Write To File > */
			{
				
				$myfile = fopen( $path , "w" ) or die( "به پوشه ی فایل ها یا خود فایل های ذخیره شده دسترسی نداریم." );
				fwrite( $myfile , $file );
				fclose( $myfile );
			}
			/* </ Write To File > */
			
			return $attribute . '.base64';
		}
	}
